{"id":"../node_modules/axios/lib/helpers/throttle.js","dependencies":[{"name":"/parcel_blueprint/package.json","includedInParent":true,"mtime":1719935541155},{"name":"/parcel_blueprint/.babelrc","includedInParent":true,"mtime":1718293933214},{"name":"/parcel_blueprint/node_modules/axios/package.json","includedInParent":true,"mtime":1719441469300}],"generated":{"js":"'use strict';\n\n/**\n * Throttle decorator\n * @param {Function} fn\n * @param {Number} freq\n * @return {Function}\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nfunction throttle(fn, freq) {\n  let timestamp = 0;\n  const threshold = 1000 / freq;\n  let timer = null;\n  return function throttled() {\n    const force = this === true;\n    const now = Date.now();\n    if (force || now - timestamp > threshold) {\n      if (timer) {\n        clearTimeout(timer);\n        timer = null;\n      }\n      timestamp = now;\n      return fn.apply(null, arguments);\n    }\n    if (!timer) {\n      timer = setTimeout(() => {\n        timer = null;\n        timestamp = Date.now();\n        return fn.apply(null, arguments);\n      }, threshold - (now - timestamp));\n    }\n  };\n}\nvar _default = exports.default = throttle;"},"sourceMaps":null,"error":null,"hash":"a28c71ae8e65c11561323cf5718c8d77","cacheData":{"env":{}}}